bool isPossible(vector<int> &boards,int size,int k,int mid){
    int assignedPainters = 1 ;
    int timeTaken = 0 ;

    for( int i = 0 ; i<size ; i++ ){
        if( boards[i]>mid ){
            return false ;
        }
        if( timeTaken + boards[i] <= mid ){
            timeTaken += boards[i] ;
        }else{
            assignedPainters++ ;
            if( assignedPainters>k ){
                return false ;
            }
            timeTaken = boards[i] ;
        }

    }
    return true ;
}

int findLargestMinDistance(vector<int> &boards, int k)
{
    //    Write your code here.
    int max = boards[0] ;
    int s = 0, e = 0 ;
    int size = boards.size() ;
    
    for( int i = 1 ; i <size ; i++ ){
        if( boards[i]>max ){
            max = boards[i] ;
        }
    }
    if(  k>=size ){
        return max;
    }
    
    for( int i = 0 ; i<size; i++ ){
        e = e + boards[i] ;
    }
    if( k ==1 ){
        return e ; 
    } 
    int mid = s + (e-s)/2 ;
    int ans = -1 ;

    while(e>=s){
        if(isPossible(boards,size,k,mid)){
            ans = mid ;
            e = mid - 1 ;
        }else{
            s = mid + 1 ;
        }

        mid = s + (e-s)/2 ;
    }
    return ans;
}